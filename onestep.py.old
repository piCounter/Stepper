#! /bin/python3
# 10/7/2022 piCounter

import os
file = os.environ['FILE']

with open(file, 'r') as file:
    file = file.readlines()
    file = file.strip_blanklines()

    

#edit 10/21/2022 by picounter
# print lines with normal spacing but change color equally up and down to highlight the middle most row. take an argument for line height with highightlight being middle most single row
def print_lines(height, step_num, step_inst):
    #34 lines. 17ish in the middle
    middle = int(height/2)
    for i in range(height):
        step_num = file[i][:index('>')]
        step_inst = file[i][index('>')+1:]
        color = middle - 1
        print("{num}{pad}{inst}".format(num=step_number, pad=len(step_number.split('.') * '\t', inst=step_instruction))
        

def strip_blanklines():

    ''' remove whitespace from list '''

    blank_list = []
    for i in file:
        if len(i) != 1:
            blank_list.append(i)
    return blank_list


# run function needs to be split up
def run(unfiltered_list):
    green = '\033[1;32m'
    dark_green = '\033[0;96m'
    dark_gray = '\033[0;90m'
    white = '\033[0m'
    l_pad = 5 * '\n'
    m_pad = 3 * '\n'
    s_pad = 1 * '\n'
    i = 0
    while i <= len(unfiltered_list):
        if len(unfiltered_list[i]) != 1:
            print(f"{l_pad}{dark_gray}{unfiltered_list[i-2]}{s_pad}")
            print(f"{dark_green}{unfiltered_list[i-1]}{m_pad}")
            print(f"{green}{unfiltered_list[i]}")
            print(f"{m_pad}{dark_green}{unfiltered_list[i+1]}")
            print(f"{s_pad}{dark_gray}{unfiltered_list[i+2]}{m_pad}")
            ans = str(input("(q)uit\tback -(x)\n"))
        if ans == 'q' or ans == 'Q':
            break
        try: 
            if int(ans) > 0:
                i -= int(ans) * 2
        except:
            pass
        i += 1


run(blank_list)

